import os
import time
import google.generativeai as genai
from dotenv import load_dotenv
load_dotenv()

api_key = os.getenv("GOOGLE_API_KEY")
# Configure the Google AI SDK with the API key
genai.configure(api_key)

def upload_to_gemini(path, mime_type=None):
    """Uploads the given file to Gemini."""
    file = genai.upload_file(path, mime_type=mime_type)
    print(f"Uploaded file '{file.display_name}' as: {file.uri}")
    return file

def wait_for_files_active(files):
    """Waits for the given files to be active."""
    print("Waiting for file processing...")
    for name in (file.name for file in files):
        file = genai.get_file(name)
        while file.state.name == "PROCESSING":
            print(".", end="", flush=True)
            time.sleep(10)
            file = genai.get_file(name)
        if file.state.name != "ACTIVE":
            raise Exception(f"File {file.name} failed to process")
    print("...all files ready")
    print()

# Create the generative model
generation_config = {
    "temperature": 1,
    "top_p": 0.95,
    "top_k": 64,
    "max_output_tokens": 8192,
    "response_mime_type": "text/plain",
}

model = genai.GenerativeModel(
    model_name="gemini-1.5-flash",
    generation_config=generation_config,
    system_instruction="Eres un Bot orientado a dar informacion acerca de los procedimientos internos, reglas, normas convivenciales, reglamentos ambientales y bÃ¡sicamente cualquier dato de gestiÃ³n interna de la empresa Promigas",
)

# Upload files and wait for them to be ready
files = [
    upload_to_gemini("POLITICA AMBIENTAL.pdf", mime_type="application/pdf"),
]
wait_for_files_active(files)

# Start a chat session
chat_session = model.start_chat(
    history=[
        {
            "role": "user",
            "parts": ["Hola\n"],
        },
        {
            "role": "model",
            "parts": [
                "Â¡Hola! ğŸ‘‹  Â¿En quÃ© puedo ayudarte hoy? \n\nEstoy aquÃ­ para brindarte informaciÃ³n sobre los procedimientos internos, reglas, normas convivenciales, reglamentos ambientales y cualquier dato de gestiÃ³n interna de Promigas. \n\nÂ¿Tienes alguna pregunta especÃ­fica? \n\nPor ejemplo:\n\n* Â¿Puedes contarme sobre el proceso de solicitud de vacaciones?\n* Â¿CuÃ¡les son las normas de seguridad en el Ã¡rea de producciÃ³n?\n* Â¿Hay algÃºn programa de reciclaje en la empresa?\n* Â¿DÃ³nde puedo encontrar el reglamento interno?\n\nÂ¡Estoy aquÃ­ para ayudarte a encontrar la informaciÃ³n que necesitas! ğŸ˜„\n"
            ],
        },
        {
            "role": "user",
            "parts": [files[0]],
        },
        {
            "role": "model",
            "parts": [
                "Â¡Excelente! Tienes la PolÃ­tica Ambiental de Promigas. ğŸ˜ƒ\n\nPuedo ayudarte a entender mejor la informaciÃ³n y a encontrar lo que necesitas. \n\nÂ¿QuÃ© te gustarÃ­a saber especÃ­ficamente sobre esta PolÃ­tica Ambiental? \n\nPor ejemplo:\n\n* *Â¿CuÃ¡les son los principales compromisos de Promigas en materia ambiental?\n *Â¿QuÃ© medidas se implementan para proteger la biodiversidad?\n *Â¿QuÃ© acciones se toman para mitigar el cambio climÃ¡tico?\n *Â¿CÃ³mo se gestiona la PolÃ­tica Ambiental dentro de la empresa?\n *Â¿QuÃ© documentos de referencia se utilizan?*\n\nDime quÃ© te interesa y te ayudarÃ© a encontrar la informaciÃ³n que necesitas. \n"
            ],
        },
        {
            "role": "user",
            "parts": ["Quien administra la politica ambiental en promigas?\n"],
        },
        {
            "role": "model",
            "parts": [
                "SegÃºn la PolÃ­tica Ambiental que me has compartido, la *Gerencia de Sostenibilidad y Medio Ambiente* de Promigas es la encargada de administrar la PolÃ­tica Ambiental. \n\nTambiÃ©n se menciona que la responsabilidad de implementar las acciones para su cumplimiento recae en cada una de las empresas vinculadas. \n\nEn resumen, la Gerencia de Sostenibilidad y Medio Ambiente tiene el rol principal de administrar la PolÃ­tica Ambiental, pero la implementaciÃ³n de las acciones se realiza en conjunto por todas las empresas del grupo. \n"
            ],
        },
    ]
)

# Infinitely prompt the model
while True:
    user_input = input("Escribe tu pregunta: ")
    response = chat_session.send_message(user_input)
    print(response.text)